female_dm <- run_diffMap(
females_data,
female_clustering,
sigma=15
)
source('functions.R')
source('colorPalette.R')
# Compute the Diffusion map
female_dm <- run_diffMap(
females_data,
female_clustering,
sigma=15
)
save(female_dm,female_clustering,female_stages,
file = 'diffusionMap_output.Rdata')
# Plot the Eigen values per diffusion component (similar to screeplots for PCAs)
plot_eigenVal(
dm=female_dm
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by the cell clustering
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_clustering,
colour=female_clusterPalette
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by the cell clustering
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_clustering,
colour=female_clusterPalette
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by embryonic stages
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_stages,
colour=female_stagePalette
)
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
load('../females_rpkm.Rdata')
load(   file = 'diffusionMap_output.Rdata')
# 使用 Slingshot 来进行 pseudotime 分析，基于 diffusion map的主要成分
# 前面的图看的 DC3到DC4之间有一个拐点，所以我们考虑前面的4个diffusion map的主要成分
# We also help the pseudotime calculation by giving the starting cliuster and the end clusters
female_lineage <- get_lineage(
dm=female_dm,
dim=c(1:4),
condition=factor(female_clustering),
start="C1",
end=c("C2", "C4"),
shrink.method="cosine"
)
# Plot the Eigen values per diffusion component (similar to screeplots for PCAs)
plot_eigenVal(
dm=female_dm
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by embryonic stages
# The black line is the cell lineage reconstruction by Slinshot
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_stages,
colour=female_stagePalette
)
plot3d(female_lineage, dim=c(1:3), add=TRUE, lwd=5)
# Save as a svg file (first orient the graph as you want, the svg save does a snapshot of the graph the way you orient it)
rgl.postscript("female_dm_stages_cols.svg", fmt = "svg", drawText = TRUE )
# Plot the 3D diffusion map using DCs 1 to 3 colored by cell clusters
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_clustering,
colour=female_clusterPalette
)
plot3d(female_lineage, dim=c(1:3), add=TRUE, lwd=5)
# Save as a svg file
rgl.postscript( "female_dm_clusters_cols.svg", fmt = "svg", drawText = TRUE )
# Attribute cells to lineages with a distance of 0.9 from the smoothed line and compute the pseudotime
female_pseudotime <- get_pseudotime(female_lineage, wthres=0.9)
rownames(female_pseudotime) <- colnames(females)
save(female_pseudotime,file = 'female_pseudotime.Rdata')
write.csv(female_pseudotime, file="female_pseudotime.csv")
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
load('../females_rpkm.Rdata')
load(file = 'diffusionMap_output.Rdata')
load(file = 'female_pseudotime.Rdata')
# Make the pseudotime of each lineage between 0 and 100 (percentage of cell progression over the pseudotime)
# thos makes the two cell lineage progression comparable
pseudotime_lin <- female_pseudotime[,"curve1"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin1_percent <- (pseudotime_lin*100)/max_pseudotime
pseudotime_lin <- female_pseudotime[,"curve2"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin2_percent <- (pseudotime_lin*100)/max_pseudotime
female_pseudotime[,"curve1"] <- pseudotime_lin1_percent
female_pseudotime[,"curve2"] <- pseudotime_lin2_percent
# Twisted palette to plot gene expression by lineages along pseudotime
female_clusterPalette2 <- c(
"#ff6663",
"#3b3561"
)
# Plot one gene expression over pseudotime for the lineage 1
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(1),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# Plot one gene expression over pseudotime for the lineage 2
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(2),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# Plot one gene expression over pseudotime for the lineage 1 and 2
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(1,2),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# List of genes of interest to plot lineage by lineage through pseudotime
gene_list <- c(
"Sall4",
"Sox11",
"Gata4",
"Lgr5",
"Runx1",
"Foxl2",
"Hey2",
"Wnt5a",
"Pdgfra",
"Nr2f2",
"Sfrp1",
"Ifitm3",
"Ptch1",
"Wnt4",
"Rspo1",
"Cdkn1b",
"Gli1",
"Tcf21",
"Nr0b1",
"Nr0b2",
"Nr5a1",
"Nr6a1"
)
plot_smoothed_genes <- function(genes, lin){
female_clusterPalette2 <- c("#ff6663", "#3b3561")
for (gene in genes){
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=lin,
gene=gene,
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
}
}
pdf("female_interesting_profiles.pdf", width=4, height=4)
plot_smoothed_genes(gene_list, 1) # plot only lineage 1
plot_smoothed_genes(gene_list, 2) # plot only lineage 2
plot_smoothed_genes(gene_list, c(1,2)) # plot the two moleages in the same graph to see the divergence
dev.off()
pdf("female_interesting_profiles.pdf", width=4, height=4)
plot_smoothed_genes(gene_list, 1) # plot only lineage 1
plot_smoothed_genes(gene_list, 2) # plot only lineage 2
plot_smoothed_genes(gene_list, c(1,2)) # plot the two moleages in the same graph to see the divergence
dev.off()
### 载入第一步挑选到的800多个高变异基因
load(file = '../step1-tSNE-female-RPKM/females_high_sv_matrix.Rdata')
dim(females_data)
## 载入第一步的tSNE后细胞类群信息
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
table(female_clustering)
source('~/Nutstore Files/Nutstore/github/mouse-xx-xy-C1/step5-Slingshot/step1-DiffusionMap.R', echo=TRUE)
# Plot the Eigen values per diffusion component (similar to screeplots for PCAs)
plot_eigenVal(
dm=female_dm
)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
# 载入表达矩阵以及diffusion map结果
load('../females_rpkm.Rdata')
load( file = 'diffusionMap_output.Rdata')
# 使用 Slingshot 来进行 pseudotime 分析，基于 diffusion map的主要成分
# 前面的图看的 DC3到DC4之间有一个拐点，所以我们考虑前面的4个diffusion map的主要成分
# We also help the pseudotime calculation by giving the starting cliuster and the end clusters
female_lineage <- get_lineage(
dm=female_dm,
dim=c(1:4),
condition=factor(female_clustering),
start="C1",
end=c("C2", "C4"),
shrink.method="cosine"
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by embryonic stages
# The black line is the cell lineage reconstruction by Slinshot
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_stages,
colour=female_stagePalette
)
# 载入表达矩阵以及diffusion map结果，还有 Slingshot 结果
load('../females_rpkm.Rdata')
load(file = 'diffusionMap_output.Rdata')
load(file = 'female_pseudotime.Rdata')
# Make the pseudotime of each lineage between 0 and 100 (percentage of cell progression over the pseudotime)
# thos makes the two cell lineage progression comparable
pseudotime_lin <- female_pseudotime[,"curve1"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
max_pseudotime
pseudotime_lin
pseudotime_lin1_percent <- (pseudotime_lin*100)/max_pseudotime
pseudotime_lin <- female_pseudotime[,"curve2"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin2_percent <- (pseudotime_lin*100)/max_pseudotime
View(female_pseudotime)
female_pseudotime[,"curve1"] <- pseudotime_lin1_percent
female_pseudotime[,"curve2"] <- pseudotime_lin2_percent
View(female_pseudotime)
# Twisted palette to plot gene expression by lineages along pseudotime
female_clusterPalette2 <- c(
"#ff6663",
"#3b3561"
)
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
# 载入RPKM形式的表达矩阵。
load('../females_rpkm.Rdata')
# Extract embryonic stage data from cell names
head(colnames(females))
female_stages <- sapply(strsplit(colnames(females), "_"), `[`, 1)
names(female_stages) <- colnames(females)
table(female_stages)
### 载入第一步挑选到的800多个高变异基因
load(file = '../step1-tSNE-female-RPKM/females_high_sv_matrix.Rdata')
dim(females_data)
## 载入第一步的tSNE后细胞类群信息
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
table(female_clustering)
data=females_data
condition=female_clustering
sigma=15
destinyObj <- as.ExpressionSet(as.data.frame(t(data)))
destinyObj$condition <- factor(condition)
dm <- DiffusionMap(destinyObj, sigma, rotate = TRUE)
female_dm <- run_diffMap(
females_data,
female_clustering,
sigma=15
)
female_dm
# Plot the Eigen values per diffusion component (similar to screeplots for PCAs)
plot_eigenVal(
dm=female_dm
)
# Plot the Eigen values per diffusion component (similar to screeplots for PCAs)
plot_eigenVal(
dm=female_dm
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by the cell clustering
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_clustering,
colour=female_clusterPalette
)
# Plot the 3D diffusion map using DCs 1 to 3 colored by embryonic stages
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_stages,
colour=female_stagePalette
)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
# 载入表达矩阵以及diffusion map结果
load('../females_rpkm.Rdata')
load( file = 'diffusionMap_output.Rdata')
factor(female_clustering)
# 使用 Slingshot 来进行 pseudotime 分析，基于 diffusion map的主要成分
# 前面的图看的 DC3到DC4之间有一个拐点，所以我们考虑前面的4个diffusion map的主要成分
# We also help the pseudotime calculation by giving the starting cliuster and the end clusters
female_lineage <- get_lineage(
dm=female_dm,
dim=c(1:4),
condition=factor(female_clustering),
start="C1",
end=c("C2", "C4"),
shrink.method="cosine"
)
female_lineage
# Plot the 3D diffusion map using DCs 1 to 3 colored by embryonic stages
# The black line is the cell lineage reconstruction by Slinshot
plot_dm_3D(
dm=female_dm,
dc=c(1:3),
condition=female_stages,
colour=female_stagePalette
)
# Attribute cells to lineages with a distance of 0.9 from the smoothed line and compute the pseudotime
female_pseudotime <- get_pseudotime(female_lineage, wthres=0.9)
female_pseudotime
View(female_pseudotime)
rownames(female_pseudotime) <- colnames(females)
save(female_pseudotime,file = 'female_pseudotime.Rdata')
write.csv(female_pseudotime, file="female_pseudotime.csv")
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(densityClust)
library(destiny)
library(rgl)
source('functions.R')
source('colorPalette.R')
# 载入表达矩阵以及diffusion map结果，还有 Slingshot 结果
load('../females_rpkm.Rdata')
load(file = 'diffusionMap_output.Rdata')
load(file = 'female_pseudotime.Rdata')
# Make the pseudotime of each lineage between 0 and 100 (percentage of cell progression over the pseudotime)
# thos makes the two cell lineage progression comparable
pseudotime_lin <- female_pseudotime[,"curve1"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
max_pseudotime
pseudotime_lin1_percent <- (pseudotime_lin*100)/max_pseudotime
pseudotime_lin1_percent
pseudotime_lin <- female_pseudotime[,"curve2"]
max_pseudotime <- max(pseudotime_lin, na.rm = TRUE)
pseudotime_lin2_percent <- (pseudotime_lin*100)/max_pseudotime
female_pseudotime[,"curve1"] <- pseudotime_lin1_percent
female_pseudotime[,"curve2"] <- pseudotime_lin2_percent
View(female_pseudotime)
# Twisted palette to plot gene expression by lineages along pseudotime
female_clusterPalette2 <- c(
"#ff6663",
"#3b3561"
)
# Plot one gene expression over pseudotime for the lineage 1
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(1),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# Plot one gene expression over pseudotime for the lineage 1
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(2),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# Plot one gene expression over pseudotime for the lineage 2
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(2),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# Plot one gene expression over pseudotime for the lineage 1 and 2
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=c(1,2),
gene="Amhr2",
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
# List of genes of interest to plot lineage by lineage through pseudotime
gene_list <- c(
"Sall4",
"Sox11",
"Gata4",
"Lgr5",
"Runx1",
"Foxl2",
"Hey2",
"Wnt5a",
"Pdgfra",
"Nr2f2",
"Sfrp1",
"Ifitm3",
"Ptch1",
"Wnt4",
"Rspo1",
"Cdkn1b",
"Gli1",
"Tcf21",
"Nr0b1",
"Nr0b2",
"Nr5a1",
"Nr6a1"
)
plot_smoothed_genes <- function(genes, lin){
female_clusterPalette2 <- c("#ff6663", "#3b3561")
for (gene in genes){
plot_smoothed_gene_per_lineage(
rpkm_matrix=females,
pseudotime=female_pseudotime,
lin=lin,
gene=gene,
stages=female_stages,
clusters=female_clustering,
stage_colors=female_stagePalette,
cluster_colors=female_clusterPalette,
lineage_colors=female_clusterPalette2
)
}
}
pdf("female_interesting_profiles.pdf", width=4, height=4)
plot_smoothed_genes(gene_list, 1) # plot only lineage 1
plot_smoothed_genes(gene_list, 2) # plot only lineage 2
plot_smoothed_genes(gene_list, c(1,2)) # plot the two moleages in the same graph to see the divergence
dev.off()
