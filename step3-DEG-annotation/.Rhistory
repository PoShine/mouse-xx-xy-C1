gene_names <- gene_names$genes
# Convert gene ID into entrez genes
entrez_genes <- bitr(gene_names, fromType="SYMBOL",
toType="ENTREZID",
OrgDb="org.Mm.eg.db")
library(clusterProfiler)
# Convert gene ID into entrez genes
entrez_genes <- bitr(gene_names, fromType="SYMBOL",
toType="ENTREZID",
OrgDb="org.Mm.eg.db")
entrez_genes <- entrez_genes[!entrez_genes$ENTREZID %in% "101055843",]
de_gene_clusters <- de_genes[de_genes$genes %in% entrez_genes$SYMBOL,
c("genes", "cluster")]
de_gene_clusters <- data.frame(
ENTREZID=entrez_genes$ENTREZID[entrez_genes$SYMBOL %in% de_gene_clusters$genes],
cluster=de_gene_clusters$cluster
)
list_de_gene_clusters <- split(de_gene_clusters$ENTREZID,
de_gene_clusters$cluster)
# Run full GO enrichment test
formula_res <- compareCluster(
ENTREZID~cluster,
data=de_gene_clusters,
fun="enrichGO",
OrgDb="org.Mm.eg.db",
ont		   = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05
)
# Run GO enrichment test and merge terms
# that are close to each other to remove result redundancy
lineage1_ego <- simplify(
formula_res,
cutoff=0.5,
by="p.adjust",
select_fun=min
)
# Plot both analysis results
pdf('female_compared_GO_term_DE_cluster.pdf')
dotplot(formula_res, showCategory=5,width = 11,height = 6)
dev.off()
pdf('female_compared_GO_term_DE_cluster_simplified.pdf',width = 11,height = 6)
dotplot(lineage1_ego, showCategory=5)
dev.off()
# Plot both analysis results
pdf('female_compared_GO_term_DE_cluster.pdf',width = 11,height = 6)
dotplot(formula_res, showCategory=5)
dev.off()
# Save results
write.csv(formula_res@compareClusterResult,
file="female_compared_GO_term_DE_cluster.csv")
write.csv(lineage1_ego@compareClusterResult,
file="female_compared_GO_term_DE_cluster_simplified.csv")
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(Seurat)
library(monocle)
load(file = 'de_clusters.Rdata')
load(file = 'ROTS_summary_pop.Rdata')
head(summary_pop1)
head(summary_pop2)
head(summary_pop3)
head(summary_pop4)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
gene_names <- gene_names$genes
View(de_genes)
View(summary_pop1)
rownames(summary_pop1[summary_pop1$FDR>0.05,])
gene_names <- subset(de_genes, qval<0.05)
g2=rownames(gene_names[gene_names$cluster=='C1',])
g2
intersect(g1,g2)
g1=rownames(summary_pop1[summary_pop1$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C1',])
intersect(g1,g2)
length(intersect(g1,g2));
length(intersect(g1,g2));length(g1)
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop2[summary_pop2$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C2',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop3[summary_pop3$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C3',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop4[summary_pop4$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C4',])
length(intersect(g1,g2));length(g1);length(g2)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
## 加载一系列自定义函数及必备R包，及配色
source('functions.R')
# 加载转录组上游数据分析得到的表达矩阵
load('../females_rpkm.Rdata')
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
## 差异分析，一般需要counts矩阵，使用 monocle 包
load('../female_count.Rdata')
# Extract embryonic stage data from cell names
head(colnames(female_count))
female_stages <- sapply(strsplit(colnames(female_count), "_"), `[`, 1)
names(female_stages) <- colnames(female_count)
table(female_stages)
# Extract capture date from cell names
female_captures <- sapply(strsplit(colnames(female_count), "_"), `[`, 3)
female_captures <- paste(female_stages, female_captures, sep="_")
names(female_captures) <- colnames(female_count)
table(female_captures)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
library(ROTS)
## 加载一系列自定义函数及必备R包，及配色
source('functions.R')
# 加载转录组上游数据分析得到的表达矩阵
load('../females_rpkm.Rdata')
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
## 差异分析，一般需要counts矩阵, 这里演示  ROTS 包。
# Extract embryonic stage data from cell names
head(colnames(female_count))
female_stages <- sapply(strsplit(colnames(female_count), "_"), `[`, 1)
names(female_stages) <- colnames(female_count)
table(female_stages)
# Extract capture date from cell names
female_captures <- sapply(strsplit(colnames(female_count), "_"), `[`, 3)
female_captures <- paste(female_stages, female_captures, sep="_")
names(female_captures) <- colnames(female_count)
table(female_captures)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
library(ROTS)
## 加载一系列自定义函数及必备R包，及配色
source('functions.R')
# 加载转录组上游数据分析得到的表达矩阵
load('../females_rpkm.Rdata')
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
## 差异分析，一般需要counts矩阵, 这里演示  ROTS 包。
load('../female_count.Rdata')
# Extract embryonic stage data from cell names
head(colnames(female_count))
female_stages <- sapply(strsplit(colnames(female_count), "_"), `[`, 1)
names(female_stages) <- colnames(female_count)
table(female_stages)
# Extract capture date from cell names
female_captures <- sapply(strsplit(colnames(female_count), "_"), `[`, 3)
female_captures <- paste(female_stages, female_captures, sep="_")
names(female_captures) <- colnames(female_count)
table(female_captures)
library(ROTS)
library(plyr)
load('../females_rpkm.Rdata')
RPKM.full=females
ROTS_input<-RPKM.full[rowMeans(RPKM.full)>=1,]
ROTS_input<-as.matrix(log2(ROTS_input+1))
if(!file.exists('ROTS_summary_pop.Rdata')){
table(female_clustering)
groups<-female_clustering
groups<-as.numeric(substring(as.character(groups),2,2))
table(groups)
CAFgroups=groups
groups[groups!=1]<-234
Sys.time()
results_pop1 = ROTS(data = ROTS_input, groups = groups , B = 1000 , K = 500 , seed = 1234)
Sys.time()
summary_pop1<-data.frame(summary(results_pop1, fdr=1))
groups<-CAFgroups
groups[groups!=2]<-134
Sys.time()
results_pop2 = ROTS(data = ROTS_input, groups = groups , B = 1000 , K = 500 , seed = 1234)
Sys.time()
summary_pop2<-data.frame(summary(results_pop2, fdr=1))
groups<-CAFgroups
groups[groups!=3]<-124
Sys.time()
results_pop3 = ROTS(data = ROTS_input, groups = groups , B = 1000 , K = 500 , seed = 1234)
Sys.time()
summary_pop3<-data.frame(summary(results_pop3, fdr=1))
groups<-CAFgroups
groups[groups!=4]<-123
Sys.time()
results_pop4 = ROTS(data = ROTS_input, groups = groups , B = 1000 , K = 500 , seed = 1234)
Sys.time()
summary_pop4<-data.frame(summary(results_pop4, fdr=1))
save(summary_pop1,summary_pop2,summary_pop3,summary_pop4,
file = 'ROTS_summary_pop.Rdata')
}
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(Seurat)
library(monocle)
load(file = 'de_clusters.Rdata')
load(file = 'ROTS_summary_pop.Rdata')
head(summary_pop1)
head(summary_pop2)
head(summary_pop3)
head(summary_pop4)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
# sgene_names <- gene_names$genes
g1=rownames(summary_pop1[summary_pop1$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C1',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop2[summary_pop2$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C2',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop3[summary_pop3$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C3',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop4[summary_pop4$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C4',])
length(intersect(g1,g2));length(g1);length(g2)
##
### ---------------
###
### Create: Jianming Zeng
### Date: 2019-07-24 15:03:19
### Email: jmzeng1314@163.com
### Blog: http://www.bio-info-trainee.com/
### Forum:  http://www.biotrainee.com/thread-1376-1-1.html
### CAFS/SUSTC/Eli Lilly/University of Macau
### Update Log: 2019-07-24  First version
###
### ---------------
rm(list=ls())
options(stringsAsFactors = F)
load(file = 'de_clusters.Rdata')
load(file = 'ROTS_summary_pop.Rdata')
head(summary_pop1)
head(summary_pop2)
head(summary_pop3)
head(summary_pop4)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
# sgene_names <- gene_names$genes
g1=rownames(summary_pop1[summary_pop1$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C1',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop2[summary_pop2$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C2',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop3[summary_pop3$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C3',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop4[summary_pop4$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C4',])
length(intersect(g1,g2));length(g1);length(g2)
rm(list=ls())
options(stringsAsFactors = F)
## 加载一系列自定义函数及必备R包，及配色
source('functions.R')
# 加载转录组上游数据分析得到的表达矩阵
load('../females_rpkm.Rdata')
tmp=read.csv('../step1-tSNE-female-RPKM/female_clustering.csv')
female_clustering=tmp[,2];names(female_clustering)=tmp[,1]
## 差异分析，一般需要counts矩阵，使用 monocle 包
load('../female_count.Rdata')
# Extract embryonic stage data from cell names
head(colnames(female_count))
female_stages <- sapply(strsplit(colnames(female_count), "_"), `[`, 1)
names(female_stages) <- colnames(female_count)
table(female_stages)
# Extract capture date from cell names
female_captures <- sapply(strsplit(colnames(female_count), "_"), `[`, 3)
female_captures <- paste(female_stages, female_captures, sep="_")
names(female_captures) <- colnames(female_count)
table(female_captures)
library(monocle)
# Prepare data to be loaded in Monocle
DE_female <- prepare_for_DE (
female_count,
female_clustering,
female_stages
)
start_time <- Sys.time()
female_DE_genes <- findDEgenes(
DE_female,
qvalue=0.05
)
end_time <- Sys.time()
end_time - start_time
female_DE_genes
View(female_DE_genes)
save(female_DE_genes,file = 'female_DE_genes.Rdata')
View(female_DE_genes)
# Get in which cluster the DE genes ar ethe most expressed (see analysis_functions.R for details)
load('../females_rpkm.Rdata')
# 后面可视化又开始使用 RPKM 值。
de_clusters <- get_up_reg_clusters(
females,
female_clustering,
female_DE_genes
)
# Write the result in a file
write.csv(
de_clusters,
quote = FALSE,
file= "female_DE_genes_per_clusters_4_groups.csv"
)
View(de_clusters)
rm(list=ls())
options(stringsAsFactors = F)
library(data.table)
library(Seurat)
library(monocle)
library(ROTS)
library(clusterProfiler)
load(file = 'de_clusters.Rdata')
View(de_clusters)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
gene_names <- subset(de_genes, qval<0.05)
gene_names <- gene_names$genes
View(de_genes)
# Convert gene ID into entrez genes
entrez_genes <- bitr(gene_names, fromType="SYMBOL",
toType="ENTREZID",
OrgDb="org.Mm.eg.db")
entrez_genes <- entrez_genes[!entrez_genes$ENTREZID %in% "101055843",]
de_gene_clusters <- de_genes[de_genes$genes %in% entrez_genes$SYMBOL,
c("genes", "cluster")]
View(de_gene_clusters)
de_gene_clusters <- data.frame(
ENTREZID=entrez_genes$ENTREZID[entrez_genes$SYMBOL %in% de_gene_clusters$genes],
cluster=de_gene_clusters$cluster
)
View(de_gene_clusters)
table(de_gene_clusters$cluster)
View(de_gene_clusters)
list_de_gene_clusters <- split(de_gene_clusters$ENTREZID,
de_gene_clusters$cluster)
list_de_gene_clusters
formula_res <- compareCluster(
ENTREZID~cluster,
data=de_gene_clusters,
fun="enrichGO",
OrgDb="org.Mm.eg.db",
ont		   = "BP",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05
)
library(GO.db)
?GO.db
ls("package:GO.db")
library(org.Mm.eg.db)
go2gene=toTable(org.Mm.egGO2EG)
View(go2gene)
View(go2gene)
go2gene=toTable(org.Mm.egGO2ALLEGS)
View(go2gene)
this_go_this_gene=go2gene[go2gene$go_id=='GO:0140014',1]
this_go_this_gene
options(stringsAsFactors = F)
library(data.table)
library(Seurat)
library(monocle)
library(ROTS)
library(clusterProfiler)
load(file = 'de_clusters.Rdata')
load(file = 'ROTS_summary_pop.Rdata')
head(summary_pop1)
head(summary_pop2)
head(summary_pop3)
head(summary_pop4)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
gene_names <- gene_names$genes
# Convert gene ID into entrez genes
entrez_genes <- bitr(gene_names, fromType="SYMBOL",
toType="ENTREZID",
OrgDb="org.Mm.eg.db")
entrez_genes <- entrez_genes[!entrez_genes$ENTREZID %in% "101055843",]
de_gene_clusters <- de_genes[de_genes$genes %in% entrez_genes$SYMBOL,
c("genes", "cluster")]
de_gene_clusters <- data.frame(
ENTREZID=entrez_genes$ENTREZID[entrez_genes$SYMBOL %in% de_gene_clusters$genes],
cluster=de_gene_clusters$cluster
)
table(de_gene_clusters$cluster)
list_de_gene_clusters <- split(de_gene_clusters$ENTREZID,
de_gene_clusters$cluster)
list_de_gene_clusters
list_de_gene_clusters[['C1']]
c1_diff_gene=list_de_gene_clusters[['C1']]
c1_diff_gene
intersect(this_go_this_gene,c1_diff_gene)
length(intersect(this_go_this_gene,c1_diff_gene))
length(c1_diff_gene)
length(this_go_this_gene)
this_go_this_gene=go2gene[go2gene$go_id=='GO:0048285',1]
length(this_go_this_gene)
library(GO.db)
?GO.db
ls("package:GO.db")
GO_dbschema()
ls("package:GO.db")
GO_dbInfo()
?compareCluster
?enrichKEGG
enrichKEGG
enrichGO
this_go_this_gene=go2gene[go2gene$go_id=='GO:0048285',]
View(this_go_this_gene)
table(this_go_this_gene$Evidence)
this_go_this_gene=go2gene[go2gene$go_id=='GO:0140014',]
length(this_go_this_gene)
View(this_go_this_gene)
table(this_go_this_gene$Evidence)
library(GO.db)
ls("package:GO.db")
library(org.Mm.eg.db)
go2gene=toTable(org.Mm.egGO2ALLEGS)
this_go_this_gene=go2gene[go2gene$go_id=='GO:0140014',]
View(this_go_this_gene)
table(this_go_this_gene$Evidence)
View(this_go_this_gene)
rm(list=ls())
options(stringsAsFactors = F)
load(file = 'de_clusters.Rdata')
load(file = 'ROTS_summary_pop.Rdata')
head(summary_pop1)
head(summary_pop2)
head(summary_pop3)
head(summary_pop4)
# Extract DE gene names
de_genes <- de_clusters
gene_names <- subset(de_genes, qval<0.05)
g1=rownames(summary_pop1[summary_pop1$FDR>0.05,])
g1=rownames(summary_pop1[summary_pop1$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C1',])
length(intersect(g1,g2));length(g1);length(g2)
View(summary_pop1)
g1=rownames(summary_pop2[summary_pop2$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C2',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop3[summary_pop3$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C3',])
length(intersect(g1,g2));length(g1);length(g2)
g1=rownames(summary_pop4[summary_pop4$FDR>0.05,])
g2=rownames(gene_names[gene_names$cluster=='C4',])
length(intersect(g1,g2));length(g1);length(g2)
g1=head(rownames(summary_pop4[summary_pop4$FDR>0.05,]),20)
g2=head(rownames(gene_names[gene_names$cluster=='C4',]))
length(intersect(g1,g2));length(g1);length(g2)
g2=head(rownames(gene_names[gene_names$cluster=='C4',]),20)
length(intersect(g1,g2));length(g1);length(g2)
View(summary_pop4)
View(de_clusters)
library(GO.db)
ls("package:GO.db")
library(org.Mm.eg.db)
go2gene=toTable(org.Mm.egGO2ALLEGS)
this_go_this_gene=go2gene[go2gene$go_id=='GO:0140014',]
table(this_go_this_gene$Evidence)
View(go2gene)
